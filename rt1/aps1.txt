##
# 
##

IMG_CentOS7 = "centos/7"
IMG_CentOS6 = "centos/6"
IPRANGE='192.168.8.11' # your VirtualBox network 
DISK='12GB'
CPU=1
RAM=512

# Set web proxy 
PROXY='Yes'             # proxy requird or not 
PROXYURL='http://....'  # your proxy
PROXYUSR=''             # user 
PROXYPSW=''             # psw 

VMS = ["ansible-101:IMG_CentOS7:10GB:2:4000", "test-101:IMG_CentOS7"] # , "test-201:IMG_CentOS6"]
COUNT = VMS.length - 1

Vagrant.configure("2") do |config|

    (0..COUNT).each do |cnt|
        
        VMINFO = VMS[cnt].split(':')
        config.vm.define VMINFO[0] do |vc|
            VMINFO = VMS[cnt].split(':')
            VMIMG  = eval(VMINFO[1])
            VMNAME = VMINFO[0]
            if VMIMG.nil?
                VMIMG = IMG_CentOS7
            end
            # Image 
            vc.vm.box = VMIMG
            
            vc.vm.provider "virtualbox" do |vb|
                VMINFO = VMS[cnt].split(':')
                VMNAME = VMINFO[0]
                VMDISK = VMINFO[2]
                VMCPU  = VMINFO[3]
                VMRAM  = VMINFO[4]
                if VMDISK.nil?
                    VMDISK = DISK
                end 
                if VMCPU.nil?
                    VMCPU = CPU
                end 
                if VMRAM.nil?
                    VMRAM = RAM
                end
                vb.name          = VMNAME
                #vb.disksize.size = VMDISK # no need this require separate plugin ..
                vb.cpus          = VMCPU
                vb.memory        = VMRAM
            end
            
            ## Sync Local Project Dir to guest on ansible node
            if VMNAME.include?('ansible')
                config.vm.synced_folder "./Project", "/Project"
            end
            
            ## Setup
            IP = "#{IPRANGE}#{cnt + 1}"
            vc.vm.network :private_network, ip: "#{IP}", type: "static"
            #vc.vm.network "public_network", type: "dhcp", bridge: "eth1"
            
            if VMIMG.include? '7'
                vc.vm.hostname = VMNAME
            end
            
            ## Execute Shell Command # node default vagrant all run as sudo by vagrant user so no need of sudo 
            vc.vm.provision "shell", inline: <<-SHELL
            
                # set hostname if rhel6
                if [[ "#{VMIMG}" =~ 6 ]]; then
                    if grep ^HOSTNAME /etc/sysconfig/network; then
                        sed -i "s/HOSTNAME=.*/HOSTNAME=#{VMNAME}/g" /etc/sysconfig/network
                    else
                        echo -e HOSTNAME="#{VMNAME}" >> /etc/sysconfig/network
                    fi 
                fi 
                hostname "#{VMNAME}"
                
                #yum clean all
                SSHD='/etc/ssh/sshd_config'
                # permit password auth 
                if grep ^PasswordAuthentication $SSHD; then
                    sed -i 's/PasswordAuthentication.*/PasswordAuthentication yes/g' $SSHD
                else
                    echo 'PasswordAuthentication yes' >>  $SSHD 
                fi
                # permit root login 
                if grep ^PermitRootLogin $SSHD; then
                    sed -i 's/PermitRootLogin.*/PermitRootLogin yes/g' $SSHD
                else
                    echo 'PermitRootLogin yes' >> $SSHD # enable password login
                fi
                service sshd restart
                # set root passwd
                echo 'x' | passwd root --stdin                                                             # set root password 
                useradd -m -p 'xx' -s /bin/bash 'sks'                                                      # add user sks 
                echo 'sks   ALL=(ALL)    NOPASSWD:ALL' > /etc/sudoers.d/sks                                # full to user
                
                # Set Generic and yum proxy
                if [[ "#{PROXY}" == 'Yes' ]]; then
                    [[ "#{PROXYUSR}" != "" && "#{PROXYPSW}" != "" ]] && PROXYCRED="#{PROXYUSR}:#{PROXYPSW}@"
                    PROXYURL=$(echo "#{PROXYURL}" | sed -e "s+//+//${PROXYCRED}+g")
				    grep http_proxy  /etc/bashrc || echo export http_proxy=$PROXYURL  >> /etc/bashrc
				    grep https_proxy /etc/bashrc || echo export https_proxy=$PROXYURL >> /etc/bashrc
					# yum.conf
					grep '^proxy='          /etc/yum.conf || echo "proxy=#{PROXYURL}"          >> /etc/yum.conf
					grep '^proxy_username=' /etc/yum.conf || echo "proxy_username=#{PROXYUSR}" >> /etc/yum.conf
					grep '^proxy_password=' /etc/yum.conf || echo "proxy_password=#{PROXYPSW}" >> /etc/yum.conf
                fi
                # Install pkgs
                [[ "#{VMNAME}" =~ 'ansible' ]] && PKG='ansible' && echo Install $PKG
                echo "yum -y install vim bind-utils net-tools epel-release sysstat $PKG"                  # Install PKGS 
                yum -y install vim bind-utils net-tools epel-release sysstat wget $PKG                    #
            SHELL
            # Run Shell 
            #vc.vm.provision :shell, inline: "echo VM - #{cnt}"
        end
    end
 
    
end

## END

############################################## Readme ###
## Vagrantfile #README.md

## Open Gitbash 

## Export Proxy 
export http_proxy=http://....
export https_proxy=http://...

## Install Prerequisite plugins 
#https://github.com/hashicorp/vagrant/wiki/Available-Vagrant-Plugins
vagrant plugin install vagrant-vbguest vagrant-nfs_guest vagrant-bindfs vagrant-sshfs 

## Create Vagrantfile
#Variables
IMG_CentOS7 = "centos/7"
IMG_CentOS6 = "centos/6"
IPRANGE='192.168.8.11' # your VirtualBox host network range to start giving ips 
DISK='12GB'            # default disk size # currently not in use 
CPU=1                  
RAM=512

# Set web proxy 
PROXY='Yes'             # proxy requird or not 
PROXYURL='http://....'  # your proxy
PROXYUSR=''             # user 
PROXYPSW=''             # psw 

## Validate 
vagrant validate 

## Status
Vagrant status

## vagrant up 


## Save snapshot
vagrant snapshot save <VM-name>
vagrant snapshot list <vm-name>
vagrant snapshot restore <snap-name>
vagrant snapshot delete [vm-name] NAME

##
